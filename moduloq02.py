# -*- coding: utf-8 -*-
"""moduloq02.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1_HQTW1yKdWXKFKVdtnHhoJ0wj_XM0YsC
"""

from datetime import date
class BatimentosCardiacos:
  __nome = ''
  __sobrenome = ''
  __data_nascimento = ''

  def setnome(self, nome):
    self.__nome = nome

  def setsobrenome(self, sobrenome):
    self.__sobrenome = sobrenome

  def setdata_nascimento(self, data_nascimento):
    self.__data_nascimento = data_nascimento

  def getnome(self):
    return self.__nome
  def getsobrenome(self):
    return self.__sobrenome
  def getdata_nascimento(self):
    return self.__data_nascimento
  
  def calculaIdade(self):
    aux = self.__data_nascimento.split()
    aux = list(map(int, aux))
    today = date.today()
    idade = today.year-aux[2]
    mes_atual = today.month
    dia_atual = today.day
    if mes_atual<=aux[1] or dia_atual < aux[0]:
      idade-=1
    return idade

  def calculaFrequenciaMax(self):
    freqMax =  200 - self.calculaIdade()
    return freqMax

  def calculaBatimentoIdeal(self):
    freqIdealB = self.calculaFrequenciaMax()*0.5
    freqIdealA = self.calculaFrequenciaMax()*0.8
    print("Aa frequencia cardiaca ideal compreende os batimentos entre: {} e {}".format(freqIdealB, freqIdealA))