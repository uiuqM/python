# -*- coding: utf-8 -*-
"""Np2moduloq01.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/190-tFy0DjY2pvpNzQs_C_pyAygckItC3
"""

#from ast import Return
import psycopg2


#DADOS PARA STRING DE CONEXÃO COM O BANCO NA MÁQUINA LOCAL
host = "localhost"
dbname = "teste"
user = "postgres"
password = "uiuq"

#STRING DE CONEXÃO.
conn_string = "host= {} user= {} dbname= {} password= {}".format(host, user, dbname, password, port=5432)

conn = psycopg2.connect(conn_string)
print("connection stablished")

#PONTEIRO PARA TRABALHAR COM O BANCO DE DADOS.
cursor = conn.cursor()

#cursor.execute("DROP TABLE IF EXISTS produto")

#CRIANDO A TABELA INVENTÁRIO CASO ELA NÃO EXISTA ATRIBUTOS: DESCRICAO, QUANTIDADE.
cursor.execute("CREATE TABLE IF NOT EXISTS produto(id serial PRIMARY KEY, descricao VARCHAR(50), quantidade INTEGER);")
print("tabela criada com sucesso!")

#funcao p inserir os dados na tabela(cria uma nova linha de dados)
def inserir(nome, qtd):
    #INSERINDO DADOS NA TABELA.
    cursor.execute("INSERT INTO produto (descricao, quantidade) VALUES(%s, %s);", (nome, qtd))

#funcao que retorna o estado da tabela
def leitura():
    cursor.execute("SELECT * FROM produto;")
    rows = cursor.fetchall()

    for row in rows:
        print("|%s|%s|%s|" %(str(row[0]), str(row[1]), str(row[2])))

#essa funcao atualiza o estado de quantidade (sobsecreve)
def atualizar(nome, qtd):
    if(verifica_existe(nome)):
        cursor.execute("UPDATE produto SET quantidade = %s WHERE descricao = %s;", (qtd, nome))
        return True
    
    print("PRODUTO INEXISTENTE!")

#adiciona uma quantidade na tabela
def adicionar(nome, qtd):
    coluna = pegar_produto(nome)
    novoVal = coluna[2] +qtd
    cursor.execute("UPDATE produto SET quantidade = %s WHERE descricao = %s;", (novoVal, nome))

#retirar uma quantidade na tabela
def retirar(nome, qtd):
    coluna = pegar_produto(nome)
    novoVal = coluna[2]-qtd
    cursor.execute("UPDATE produto SET quantidade = %s WHERE descricao = %s;", (novoVal, nome))

#exclui um produto da tabela
def excluir(nome):

    if(verifica_existe(nome)):
        cursor.execute("DELETE FROM produto WHERE descricao = %s;", (nome,))
    else: 
        print("PRODUTO INEXISTENTE")
    
#funcao valida o estado de um produto na tabela
def verifica_existe(nome):
    #checando primeiro se o produto existe
    cursor.execute("SELECT * FROM produto;")
    rows = cursor.fetchall()
    for row in rows:
        #se for encontrado o nome do produto na tabela[descricao]
        if(str(row[1]) == nome):
            return True
    return False
    
#funcao retorna a linha de um produto especifico
def pegar_produto(nome):
    #checando primeiro se o produto existe
    cursor.execute("SELECT * FROM produto;")
    rows = cursor.fetchall()
    for row in rows:
        #se encontra produto na tabela retorna a linha do produto
        if(str(row[1]) == nome):
            return row
    print("Produto não existe")